<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Tokyos-Air" failures="1" tests="14" name="runner.PolicyRunner" time="209.083" errors="0" timestamp="2021-10-08T16:19:56 SAST" skipped="4">
  <testcase classname="runner.PolicyRunner" name="PolicybyPolicyReference" time="9.401"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="PolicyListbyPolicyNumber" time="10.607"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="PolicybyIdentityNumber" time="16.307"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="DocumentsbyPolicyReference" time="101.729"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="UpdateBankAccountAndDebitDay" time="18.326"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="TESTPolicyHolderUpdate" time="10.259"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="UploadDocument" time="10.961"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="ChangeBeneficiaries" time="12.471"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="UpdatePolicyHolder" time="8.857"/>
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="NIFPolicyHolderUpdate" time="10.165">
    <failure message="The following asserts failed:
	expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at Utilities.ApiHelper.AssertEquals(ApiHelper.java:247)
at com.exergyRestApi.policy.NIFPolicyHolderUpdate.nIFPolicyHolderUpdate(NIFPolicyHolderUpdate.java:29)
at runner.PolicyRunner.NIFPolicyHolderUpdate(PolicyRunner.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- NIFPolicyHolderUpdate -->
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="f0">
    <skipped/>
  </testcase> <!-- f0 -->
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="f2">
    <skipped/>
  </testcase> <!-- f2 -->
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="f1">
    <skipped/>
  </testcase> <!-- f1 -->
  <system-out/>
  <testcase classname="runner.PolicyRunner" name="f3">
    <skipped/>
  </testcase> <!-- f3 -->
  <system-out/>
</testsuite> <!-- runner.PolicyRunner -->
