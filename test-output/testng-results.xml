<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="14" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-12T07:55:57 SAST" name="Default suite" finished-at="2021-10-12T07:59:26 SAST" duration-ms="209036">
    <groups>
    </groups>
    <test started-at="2021-10-12T07:55:57 SAST" name="Default test" finished-at="2021-10-12T07:59:26 SAST" duration-ms="209036">
      <class name="runner.PolicyRunner">
        <test-method signature="PolicybyPolicyReference()[pri:24, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:55:57 SAST" name="PolicybyPolicyReference" finished-at="2021-10-12T07:56:12 SAST" duration-ms="14825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PolicybyPolicyReference -->
        <test-method signature="PolicyListbyPolicyNumber()[pri:25, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:56:12 SAST" name="PolicyListbyPolicyNumber" finished-at="2021-10-12T07:56:38 SAST" duration-ms="26323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PolicyListbyPolicyNumber -->
        <test-method signature="PolicybyIdentityNumber()[pri:26, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:56:38 SAST" name="PolicybyIdentityNumber" finished-at="2021-10-12T07:57:11 SAST" duration-ms="32546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PolicybyIdentityNumber -->
        <test-method signature="DocumentsbyPolicyReference()[pri:27, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:57:11 SAST" name="DocumentsbyPolicyReference" finished-at="2021-10-12T07:58:23 SAST" duration-ms="72197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DocumentsbyPolicyReference -->
        <test-method signature="UpdateBankAccountAndDebitDay()[pri:28, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:58:23 SAST" name="UpdateBankAccountAndDebitDay" finished-at="2021-10-12T07:58:44 SAST" duration-ms="21245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateBankAccountAndDebitDay -->
        <test-method signature="TESTPolicyHolderUpdate()[pri:29, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:58:44 SAST" name="TESTPolicyHolderUpdate" finished-at="2021-10-12T07:58:56 SAST" duration-ms="11543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TESTPolicyHolderUpdate -->
        <test-method signature="ChangeBeneficiaries()[pri:30, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:58:56 SAST" name="ChangeBeneficiaries" finished-at="2021-10-12T07:59:02 SAST" duration-ms="6842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeBeneficiaries -->
        <test-method signature="UploadDocument()[pri:30, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:59:02 SAST" name="UploadDocument" finished-at="2021-10-12T07:59:12 SAST" duration-ms="9537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadDocument -->
        <test-method signature="NIFPolicyHolderUpdate()[pri:31, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:59:12 SAST" name="NIFPolicyHolderUpdate" finished-at="2021-10-12T07:59:15 SAST" duration-ms="3288" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at runner.PolicyRunner.NIFPolicyHolderUpdate(PolicyRunner.java:104)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NIFPolicyHolderUpdate -->
        <test-method signature="UpdatePolicyHolder()[pri:31, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:59:15 SAST" name="UpdatePolicyHolder" finished-at="2021-10-12T07:59:26 SAST" duration-ms="10205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdatePolicyHolder -->
        <test-method is-config="true" signature="EndTests()[pri:0, instance:runner.PolicyRunner@71075444]" started-at="2021-10-12T07:59:26 SAST" name="EndTests" finished-at="2021-10-12T07:59:26 SAST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTests -->
      </class> <!-- runner.PolicyRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
